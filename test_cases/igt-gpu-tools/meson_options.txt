option('overlay',
       type : 'feature',
       description : 'Build overlay tool')

option('overlay_backends',
       type : 'array',
       value : ['auto'],
       choices : [ 'auto', 'x', 'xv' ],
       description : 'Overlay backends to enable')

option('chamelium',
       type : 'feature',
       description : 'Build Chamelium test')

option('valgrind',
       type : 'feature',
       description : 'Build with support for valgrind annotations')

option('man',
       type : 'feature',
       description : 'Build man pages')

option('testplan',
       type : 'feature',
       description : 'Build testplan documentation pages in ReST and html')

option('sphinx',
       type : 'feature',
       value : 'disabled',
       description : 'Build testplan documentation using Sphinx')

option('docs',
       type : 'feature',
       description : 'Build documentation')

option('tests',
       type : 'feature',
       description : 'Build tests')

# Currently, Xe uAPI is not stable: it may still change while the driver is
# not merged upstream.
# So, add an option to enable it, as distros shall not be shipping
# binaries with Xe tests on it, as they will most certainly fail once
# drivers get upstreamed.
option('xe_driver',
       type : 'feature',
       value : 'disabled',
       description : 'Build tests for Xe driver (experimental)')

option('libdrm_drivers',
       type : 'array',
       value : ['auto'],
       choices : ['', 'auto', 'intel', 'nouveau', 'amdgpu'],
       description : 'libdrm libraries to be used')

option('libunwind',
       type : 'feature',
       description : 'Use libunwind')

option('runner',
       type : 'feature',
       description : 'Build test runner')

option('oping',
       type : 'feature',
       description : 'Build test runner with liboping for pinging support')

option('use_rpath',
       type : 'boolean',
       value : false,
       description : 'Set runpath on installed executables for libigt.so')

option('version_hash',
       type : 'string',
       description : 'Override the Git commit hash embedded in the binaries')

option('srcdir',
       type : 'string',
       description : 'Override the source code path embedded inside target binaries (optional)')
